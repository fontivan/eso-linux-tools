#!/usr/bin/env bash

########################################################################################################################
# MIT License
#
# Copyright (c) 2021 fontivan
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
########################################################################################################################

########################################################################################################################
# function ValidateInput()
#
# Description:
#   Validate that a required input has been set.
# Inputs:
#   $1 - The name of the configuration variable
#   $2 - The value of the configuration variable
#   $3 - Set this if the variable should be a directory that exists
# Returns:
#   0 - If the variable is set and if it is a directory it exists.
#   1 - If the variable is not set or if it is a directory that is missing
########################################################################################################################
function ValidateInput(){

    local variableName
    local variableValue
    local isDirectory

    variableName="${1}"
    variableValue="${2}"
    isDirectory="${3}"

    if [[ -n "${variableValue}" ]]
    then
        if [[ -n "${isDirectory}" ]]
        then
            if [[ ! -d "${variableValue}" ]]
            then
                PrintError "The required variable '${variableName}' was set but it is supposed to be a directory and could not be found."
                return 1
            fi
        fi
    else
        PrintError "The required variable '${variableName}' was not set."
        return 1
    fi

    return 0

}
